<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_badguy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randomize()

State="Idle"

Sprite=spr_badguy_2

Sprite_Captured=spr_badguy_captured

Sprite_Gui=spr_gui_badguy

Current_Path=path_add()

TX=-1
TY=-1

Revealed=false

scr_part_path_red()

Can_Nav=true
Can_Turn=true

Image_Index=0

//Stating and Ending frame for sprite animation
A=0
B=0

Powered=false
Scared=false

//The targeted police officer
//Either running away or chasing.
Police=-4

Flip=true

//Gravity and height vars.
Alt=0
Grav=.5
Vsp=0 //Positive goes down.
MFsp=8//Max fall speed

Speed=0

//The normal movement speed.
Run_Speed=1.5
//Panic speed is how fast he runs when invincible.
//It gives him space to get away from the officers.
Panic_Speed=3

C_Direction=direction

Revealed=true

Invincible=true
alarm[4]=120

x=xstart
y=ystart
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var s=obj_badguy_spawner

if instance_exists(s)
    {
    if s.Pos&lt;ds_list_size(s.Badguys)
        {
        s.Token+=1
        //show_message("A token was added.")
        }
    }
    
if instance_exists(obj_badguy_infinite_spawner)
    {
    obj_badguy_infinite_spawner.Token+=1
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Can_Turn=true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroyed, spawn the detained
instance_destroy()

var b=instance_create(x,y,obj_detained);

b.sprite_index=Sprite_Gui
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cannot be caught after spawning

Invincible=false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Runs from police

Scared=false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Attack Mode

Powered=false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Decides next action

State="Idle"
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Path recalculation

Can_Nav=true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth=-y

direction=scr_round_direction()

scr_stayOutOfWall(100)

var c=direction+view_angle[0];

if c&gt;360
    {
    c-=360
    }

if c&lt;=45 or c&gt;315
    {
    A=0
    B=3
    Flip=1
    }
    
if c&lt;=225 and c&gt;135
    {
    A=0
    B=3
    Flip=-1
    }
    
if c&lt;=315 and c&gt;225  
    {
    A=4
    B=7
    Flip=1
    }
    
if c&lt;=135 and c&gt;45
    {
    A=8
    B=11
    Flip=1
    }
    
if Image_Index&gt;=B+.9 or Image_Index&lt;A
    {
    Image_Index=A
    }else{
    if State="Captured"
        {
        Image_Index+=1
        }else{
        Image_Index+=0.1
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//When revealed, you can see the bad guys path.
/*
if Revealed=true
    {
    if path_exists(Current_Path)
        {
        repeat 2
            {
            var px, py, rr
            rr=random(1)
            px=path_get_x(Current_Path,rr)
            py=path_get_y(Current_Path,rr)
            
            part_particles_create(System,px,py,Particle,1)
            }
        }
    }
*/
//Gravitational pull.
if Vsp&gt;=MFsp
    {
    Vsp=MFsp
    }else{
    Vsp+=Grav
    }
Alt-=Vsp
if Alt&lt;0
    {
    Alt=0
    }  
    
//The badguy flashes when invincible.
if Invincible=true
    {
    visible=!visible
    }else{
    visible=true
    }

if State="Idle"
    {
    //The badguy tries to find a pellet to grab in the room.
    Police=-4
    
    if Invincible=true
        {
        Speed=Panic_Speed
        }
        else
        {
        Speed=Run_Speed
        }
    
    scr_move_align()
    //scr_walk_in_line()
    
    if instance_exists(obj_pellet)
        {
        State="Pursue"
        //var fff=irandom(5)
        
        //if fff=3
            //{
            randomize()
            var n=instance_find(obj_pellet,irandom(instance_number(obj_pellet)-1))
            //}//else{
            //var n=instance_nearest(x,y,obj_pellet)
            //}
        TX=n.x+16
        TY=n.y+16
        }
    }
    
if State="Pursue"
    {
    //The badguy goes after the pellets in the room.
    
    //If he is close to a pellet, he targets the next nearest one.
    Police=-4
    if point_distance(x,y,TX,TY)&lt;16
        {
        var n=instance_nearest(x,y,obj_pellet)
        TX=n.x+16
        TY=n.y+16
        path_end()
        Can_Nav=true
        //After picking up a pellet he instantly calculates the next path.
        }
    
    //When he collects a power pellet, he becomes strong.
    if Powered=true
        {
        if instance_exists(obj_ghost)
            {
            var n=instance_nearest(x,y,obj_ghost)
            //if the police is inside the room...
            if n.x&gt;0
            if n.y&gt;0
                {
                if point_distance(x,y,n.x,n.y)&lt;200
                    {
                    State="Attack"
                    }
                }
            }
        }
        
    //If the badguy is vulnerable and sees the officer,
    //He will run away from her.
    if Powered=false
        {
        if scr_seeGhost()=true
            {
            State="Run Away"
            Scared=true
            
            alarm[1]=100
            //alarm[3]=300        
            }
        }
    
    Speed=1.5
    
    if Can_Nav=true
        {
        path_end()
        Can_Nav=false
        alarm[0]=10
        scr_findpath_badguy2(x,y,TX,TY)
        path_start(Current_Path,Speed,path_action_stop,false)
        }
          
    }

if State="Run Away"
    {
    Police=-4
    
    //If at the end of the destination.
    if point_distance(x,y,TX,TY)&lt;16
        {
        path_end()
        
        TX=irandom(room_width/32)*32+16
        TY=irandom(room_height/32)*32+16
        while place_meeting(TX,TY,obj_wall)
            {
            TX=irandom(room_width/32)*32+16
            TY=irandom(room_height/32)*32+16
            }
        }
        
    //Obtaining power pellet makes it go after the closest officer.
    if Powered=true
        {
        if instance_exists(obj_ghost)
            {
            var n=instance_nearest(x,y,obj_ghost)
            //if the police is inside the room...
            if n.x&gt;0
            if n.y&gt;0
                {
                if point_distance(x,y,n.x,n.y)&lt;200
                    {
                    State="Attack"
                    }
                }
            }
        }
    
    scr_move_align()
        
    //Find a way to that destination.
    if Can_Nav=true
        {
        path_end()
        Can_Nav=false
        alarm[0]=30
        scr_findpath_badguy(x,y,TX,TY)
        path_start(Current_Path,Speed,path_action_stop,false)
        }
    /*
    if Scared=false
        {
        State="Idle"
        }
    */
    var n=instance_nearest(x,y,obj_ghost)
    if point_distance(x,y,n.x,n.y)&lt;63
        {
        State="Danger"
        path_end()
        }
    }
    
//Danger tells the badguy which direction to go
//before changing to Danger 2.
if State="Danger"
    {
    if instance_exists(obj_ghost)
        {
        //If powered up, he will attack the police officer.
        if Powered=true
            {
            var n=instance_nearest(x,y,obj_ghost)
            if point_distance(x,y,n.x,n.y)&lt;128
                {
                State="Attack"
                }
            }
        
        //He will target the nearest police officer to run away from.
        if Police=-4
            {
            Police=instance_nearest(x,y,obj_ghost)
            }
        
        //Point the opposite direction
        
        direction=point_direction(Police.x,Police.y,x,y)
        
        if Invincible=true
            {
            Speed=Panic_Speed 
            }
            else
            {
            Speed=Run_Speed
            }
        speed=Speed
        scr_walk_in_line(obj_wall,Speed)
        
        State="Danger 2"
        }
    }
    
if State="Danger 2"
    {
    if Invincible=true
        {
        Speed=Panic_Speed
        }
        else
        {
        Speed=Run_Speed
        }
    speed=Speed
    scr_walk_in_line(obj_wall,Speed)
    
    //He will target the nearest police officer to run away from.
    if instance_exists(obj_ghost)
        {
        //If powered up, he will attack the police officer.
        var n=instance_nearest(x,y,obj_ghost)
        if Powered=true
            {
            if point_distance(x,y,n.x,n.y)&lt;128
                {
                State="Attack"
                }
            }else{
            if point_distance(x,y,n.x,n.y)&gt;=80
                {
                State="Run Away"
                }
            }
        }
    }

if State="Attack"
    {        
    alarm[1]=-1
    
    if alarm[2]&lt;=60
        {
        State="Idle"
        }
    
    if instance_exists(obj_ghost)
        {
        //Police=instance_find(obj_ghost,irandom(instance_number(obj_ghost)-1))
        if Police=-4
            {
            Police=instance_nearest(x,y,obj_ghost)
            }

        TX=Police.x
        TY=Police.y            
        }else{
        State="Idle"
        path_end()
        }
    
    scr_move_align()
    
    //If the target policeman is inside the room...
    if TX&gt;0 and TY&gt;0
        {
        if Can_Nav=true
            {
            path_end()
            Can_Nav=false
            alarm[0]=30
            scr_findpath(x,y,TX,TY)
            path_start(Current_Path,Speed,path_action_stop,false)
            }
        }else{
        //If outside the room, do not target the police officer.
        State="Idle"
        }
    }
    
if State="Captured"
    {
    speed=0
    path_end()
    alarm[0]=-1
    alarm[1]=-1
    alarm[2]=-1
    alarm[3]=-1
    alarm[4]=-1
    
    if alarm[5]=-1
        {
        alarm[5]=60
        }
    }
    
//Breadcrumb trail

scr_breadcrumb()
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_window">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Break the window
other.image_index=1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_power_pellet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Powered=true
alarm[2]=300

scr_particle(x,y,scr_part_pellet,-100)

instance_destroy(other)
var s=scr_sound(snd_power_pellet,1,false)

instance_destroy(other)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_pellet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if Invincible=false
    {
    instance_destroy(other)
    var s=scr_sound(snd_pellet_pickup,1,false)
    if instance_exists(obj_controller)
        {
        Pellets_Saved-=1
        }
    //audio_sound_pitch(s,random_range(.9,1.2))
    
    scr_particle(x,y,scr_part_pellet,-100000)
    
    if !instance_exists(obj_pellet)
        {
        //Game Over
        scr_game_over(false)
        Game_State="None"
        }
        
    Stupid_Points+=1
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_hazard_parent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if Alt=0
    {
    Vsp=-8
    if !audio_is_playing(snd_jump)
        {
        scr_sound(snd_jump,0,false)
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_ghost">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Police=-4

//You win

if Powered=true
    {
    //The police officer will control the code.
    }else{
    
    if instance_exists(obj_prison_cell)
        {
        obj_prison_cell.Onscreen=true
        }
    
    //Delete the breadcrumb trail.
    if instance_exists(obj_breadcrumb)
        {
        var i=0
        repeat instance_number(obj_breadcrumb)
            {
            var t=instance_find(obj_breadcrumb,i);
            if t.Id=string(id)
                {
                instance_destroy(t)
                }
            }
        }
    
    //The bad guy is caught.
    //If all are caught per level, it is victory.
    if Invincible=false
        {
        if State!="Captured"
            {
            scr_badguyspawn(60)
            
            State="Captured"
            //Bad_Guy_Lives-=1
            Timer+=15
            scr_sound(snd_point_scored,0,false)
            }
        }
    
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x=xstart
y=ystart


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var c=image_blend

if Powered=true
    {
    c=make_colour_rgb(random(255),random(255),random(255))
    }
    
var yof=8
draw_set_color(c_black)
draw_set_alpha(1)
scr_draw_sprite_floor(sprite271,0,x,y,1,1,0,c_white,1)

var altx=lengthdir_x(Alt,-view_angle[0])
var alty=lengthdir_y(Alt,-view_angle[0])

if State="Captured"
    {
    scr_draw_sprite_floor(Sprite_Captured,Image_Index,x-alty,y-alty,Flip,1,0,c,1)
    }else{
    scr_draw_sprite_floor(Sprite,Image_Index,x,y-Alt,Flip,1,0,c,1)
    }

/*
draw_set_font(ft_8bit)
draw_set_color(c_white)
draw_text(x,y-64,string(State))
draw_text(x,y-96,"Direction" + string(direction))
draw_text(x,y-128,string(TY))
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
